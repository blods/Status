//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;



public partial class StatusDataContext : Microsoft.SharePoint.Linq.DataContext {
	
	#region Extensibility Method Definitions
	partial void OnCreated();
	#endregion
	
	public StatusDataContext(string requestUrl) : 
			base(requestUrl) {
		this.OnCreated();
	}
	
	/// <summary>
	/// Lists the class of system
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Classification")]
	public Microsoft.SharePoint.Linq.EntityList<ClassificationItem> Classification {
		get {
			return this.GetList<ClassificationItem>("Classification");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Icons")]
	public Microsoft.SharePoint.Linq.EntityList<Document> Icons {
		get {
			return this.GetList<Document>("Icons");
		}
	}
	
	/// <summary>
	/// Holds the notice message displayed at the top of the status page
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Notice")]
	public Microsoft.SharePoint.Linq.EntityList<NoticeItem> Notice {
		get {
			return this.GetList<NoticeItem>("Notice");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Outages")]
	public Microsoft.SharePoint.Linq.EntityList<OutagesItem> Outages {
		get {
			return this.GetList<OutagesItem>("Outages");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Scripts")]
	public Microsoft.SharePoint.Linq.EntityList<Document> Scripts {
		get {
			return this.GetList<Document>("Scripts");
		}
	}
	
	/// <summary>
	/// Use this library to store files which are included on pages within this site, such as images on Wiki pages.
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Assets")]
	public Microsoft.SharePoint.Linq.EntityList<Document> SiteAssets {
		get {
			return this.GetList<Document>("Site Assets");
		}
	}
	
	/// <summary>
	/// Use this library to create and store pages on this site.
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Pages")]
	public Microsoft.SharePoint.Linq.EntityList<WikiPage> SitePages {
		get {
			return this.GetList<WikiPage>("Site Pages");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Subscriptions")]
	public Microsoft.SharePoint.Linq.EntityList<SubscriptionsItem> Subscriptions {
		get {
			return this.GetList<SubscriptionsItem>("Subscriptions");
		}
	}
	
	/// <summary>
	/// List of systems which we will report against
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Systems")]
	public Microsoft.SharePoint.Linq.EntityList<SystemsItem> Systems {
		get {
			return this.GetList<SystemsItem>("Systems");
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ClassificationItem))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Document))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(NoticeItem))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(OutagesItem))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SubscriptionsItem))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SystemsItem))]
public partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
	
	private System.Nullable<int> _id;
	
	private System.Nullable<int> _version;
	
	private string _path;
	
	private Microsoft.SharePoint.Linq.EntityState _entityState;
	
	private System.Collections.Generic.IDictionary<string, object> _originalValues;
	
	private string _title;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion

	Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
		get {
			return this._entityState;
		}
		set {
			if ((value != this._entityState)) {
				this._entityState = value;
			}
		}
	}

	System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
		get {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			return this._originalValues;
		}
	}
	
	public Item() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
	public System.Nullable<int> Id {
		get {
			return this._id;
		}
		set {
			if ((value != this._id)) {
				this.OnPropertyChanging("Id", this._id);
				this._id = value;
				this.OnPropertyChanged("Id");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
	public System.Nullable<int> Version {
		get {
			return this._version;
		}
		set {
			if ((value != this._version)) {
				this.OnPropertyChanging("Version", this._version);
				this._version = value;
				this.OnPropertyChanged("Version");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
	public string Path {
		get {
			return this._path;
		}
		set {
			if ((value != this._path)) {
				this.OnPropertyChanging("Path", this._path);
				this._path = value;
				this.OnPropertyChanged("Path");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
	public virtual string Title {
		get {
			return this._title;
		}
		set {
			if ((value != this._title)) {
				this.OnPropertyChanging("Title", this._title);
				this._title = value;
				this.OnPropertyChanged("Title");
			}
		}
	}
	
	public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
	
	public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
	
	protected virtual void OnPropertyChanged(string propertyName) {
		if ((null != this.PropertyChanged)) {
			this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
		}
	}
	
	protected virtual void OnPropertyChanging(string propertyName, object value) {
		if ((null == this._originalValues)) {
			this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
		}
		if ((false == this._originalValues.ContainsKey(propertyName))) {
			this._originalValues.Add(propertyName, value);
		}
		if ((null != this.PropertyChanging)) {
			this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
		}
	}
}

/// <summary>
/// Create a new document.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101")]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WikiPage))]
public partial class Document : Item {
	
	private string _name;
	
	private string _documentModifiedBy;
	
	private string _documentCreatedBy;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public Document() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
	public string Name {
		get {
			return this._name;
		}
		set {
			if ((value != this._name)) {
				this.OnPropertyChanging("Name", this._name);
				this._name = value;
				this.OnPropertyChanged("Name");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_documentModifiedBy", ReadOnly=true, FieldType="Text")]
	public string DocumentModifiedBy {
		get {
			return this._documentModifiedBy;
		}
		set {
			if ((value != this._documentModifiedBy)) {
				this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
				this._documentModifiedBy = value;
				this.OnPropertyChanged("DocumentModifiedBy");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_documentCreatedBy", ReadOnly=true, FieldType="Text")]
	public string DocumentCreatedBy {
		get {
			return this._documentCreatedBy;
		}
		set {
			if ((value != this._documentCreatedBy)) {
				this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
				this._documentCreatedBy = value;
				this.OnPropertyChanged("DocumentCreatedBy");
			}
		}
	}
}

/// <summary>
/// Create a new wiki page.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wiki Page", Id="0x010108")]
public partial class WikiPage : Document {
	
	private string _wikiContent;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public WikiPage() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WikiField", Storage="_wikiContent", FieldType="Note")]
	public string WikiContent {
		get {
			return this._wikiContent;
		}
		set {
			if ((value != this._wikiContent)) {
				this.OnPropertyChanging("WikiContent", this._wikiContent);
				this._wikiContent = value;
				this.OnPropertyChanged("WikiContent");
			}
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string Title {
		get {
			throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
		}
		set {
			throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Classification")]
public partial class ClassificationItem : Item {
	
	private string _description;
	
	private System.Nullable<double> _sortOrder;
	
	private Microsoft.SharePoint.Linq.EntitySet<SystemsItem> _systemsItem;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public ClassificationItem() {
		this._systemsItem = new Microsoft.SharePoint.Linq.EntitySet<SystemsItem>();
		this._systemsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SystemsItem>>(this.OnSystemsItemSync);
		this._systemsItem.OnChanged += new System.EventHandler(this.OnSystemsItemChanged);
		this._systemsItem.OnChanging += new System.EventHandler(this.OnSystemsItemChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
	public string Description {
		get {
			return this._description;
		}
		set {
			if ((value != this._description)) {
				this.OnPropertyChanging("Description", this._description);
				this._description = value;
				this.OnPropertyChanged("Description");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SortOrder", Storage="_sortOrder", FieldType="Number")]
	public System.Nullable<double> SortOrder {
		get {
			return this._sortOrder;
		}
		set {
			if ((value != this._sortOrder)) {
				this.OnPropertyChanging("SortOrder", this._sortOrder);
				this._sortOrder = value;
				this.OnPropertyChanged("SortOrder");
			}
		}
	}
	
	/// <summary>
	/// Class of system
	/// </summary>
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Class", Storage="_systemsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Systems")]
	public Microsoft.SharePoint.Linq.EntitySet<SystemsItem> SystemsItem {
		get {
			return this._systemsItem;
		}
		set {
			this._systemsItem.Assign(value);
		}
	}
	
	private void OnSystemsItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("SystemsItem", this._systemsItem.Clone());
	}
	
	private void OnSystemsItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("SystemsItem");
	}
	
	private void OnSystemsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SystemsItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.Classification = this;
		}
		else {
			e.Item.Classification = null;
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Notice")]
public partial class NoticeItem : Item {
	
	private string _notice;
	
	private System.Nullable<bool> _display;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public NoticeItem() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Notice", Storage="_notice", FieldType="Note")]
	public string Notice {
		get {
			return this._notice;
		}
		set {
			if ((value != this._notice)) {
				this.OnPropertyChanging("Notice", this._notice);
				this._notice = value;
				this.OnPropertyChanged("Notice");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Display", Storage="_display", FieldType="Boolean")]
	public System.Nullable<bool> Display {
		get {
			return this._display;
		}
		set {
			if ((value != this._display)) {
				this.OnPropertyChanging("Display", this._display);
				this._display = value;
				this.OnPropertyChanged("Display");
			}
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Outages")]
public partial class OutagesItem : Item {
	
	private System.Nullable<System.DateTime> _start;
	
	private string _details;
	
	private string _scopeOfImpact;
	
	private string _userActionRequired;
	
	private string _trackingRef;
	
	private System.Nullable<System.DateTime> _end;
	
	private string _update;
	
	private System.Nullable<bool> _activateEmails;
	
	private System.Nullable<double> _emailCount;
	
	private System.Nullable<Defcon> _defcon;
	
	private Microsoft.SharePoint.Linq.EntitySet<SystemsItem> _system;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public OutagesItem() {
		this._system = new Microsoft.SharePoint.Linq.EntitySet<SystemsItem>();
		this._system.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SystemsItem>>(this.OnSystemSync);
		this._system.OnChanged += new System.EventHandler(this.OnSystemChanged);
		this._system.OnChanging += new System.EventHandler(this.OnSystemChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Start", Storage="_start", Required=true, FieldType="DateTime")]
	public System.Nullable<System.DateTime> Start {
		get {
			return this._start;
		}
		set {
			if ((value != this._start)) {
				this.OnPropertyChanging("Start", this._start);
				this._start = value;
				this.OnPropertyChanged("Start");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Details", Storage="_details", FieldType="Note")]
	public string Details {
		get {
			return this._details;
		}
		set {
			if ((value != this._details)) {
				this.OnPropertyChanging("Details", this._details);
				this._details = value;
				this.OnPropertyChanged("Details");
			}
		}
	}
	
	/// <summary>
	/// The systems and regions or offices that are impacted by this outage
	/// </summary>
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Scope_x0020_of_x0020_Impact", Storage="_scopeOfImpact", FieldType="Note")]
	public string ScopeOfImpact {
		get {
			return this._scopeOfImpact;
		}
		set {
			if ((value != this._scopeOfImpact)) {
				this.OnPropertyChanging("ScopeOfImpact", this._scopeOfImpact);
				this._scopeOfImpact = value;
				this.OnPropertyChanged("ScopeOfImpact");
			}
		}
	}
	
	/// <summary>
	/// Steps that those impacted by the outage should take
	/// </summary>
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="User_x0020_Action_x0020_Required", Storage="_userActionRequired", FieldType="Note")]
	public string UserActionRequired {
		get {
			return this._userActionRequired;
		}
		set {
			if ((value != this._userActionRequired)) {
				this.OnPropertyChanging("UserActionRequired", this._userActionRequired);
				this._userActionRequired = value;
				this.OnPropertyChanged("UserActionRequired");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Ticket", Storage="_trackingRef", FieldType="Text")]
	public string TrackingRef {
		get {
			return this._trackingRef;
		}
		set {
			if ((value != this._trackingRef)) {
				this.OnPropertyChanging("TrackingRef", this._trackingRef);
				this._trackingRef = value;
				this.OnPropertyChanged("TrackingRef");
			}
		}
	}
	
	/// <summary>
	/// Problem end time
	/// </summary>
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="End", Storage="_end", FieldType="DateTime")]
	public System.Nullable<System.DateTime> End {
		get {
			return this._end;
		}
		set {
			if ((value != this._end)) {
				this.OnPropertyChanging("End", this._end);
				this._end = value;
				this.OnPropertyChanged("End");
			}
		}
	}
	
	/// <summary>
	/// Update notifications
	/// </summary>
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Update", Storage="_update", FieldType="Note")]
	public string Update {
		get {
			return this._update;
		}
		set {
			if ((value != this._update)) {
				this.OnPropertyChanging("Update", this._update);
				this._update = value;
				this.OnPropertyChanged("Update");
			}
		}
	}
	
	/// <summary>
	/// When set to yes an email will be sent and then this field set to no
	/// </summary>
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailsSend", Storage="_activateEmails", FieldType="Boolean")]
	public System.Nullable<bool> ActivateEmails {
		get {
			return this._activateEmails;
		}
		set {
			if ((value != this._activateEmails)) {
				this.OnPropertyChanging("ActivateEmails", this._activateEmails);
				this._activateEmails = value;
				this.OnPropertyChanged("ActivateEmails");
			}
		}
	}
	
	/// <summary>
	/// Number of emails sent in the last post
	/// </summary>
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailsSent", Storage="_emailCount", FieldType="Number")]
	public System.Nullable<double> EmailCount {
		get {
			return this._emailCount;
		}
		set {
			if ((value != this._emailCount)) {
				this.OnPropertyChanging("EmailCount", this._emailCount);
				this._emailCount = value;
				this.OnPropertyChanged("EmailCount");
			}
		}
	}
	
	/// <summary>
	/// 1 - Total Outage 2 - Partial Outage 3 - Planned Outage in Progress
	/// </summary>
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Defcom", Storage="_defcon", FieldType="Choice")]
	public System.Nullable<Defcon> Defcon {
		get {
			return this._defcon;
		}
		set {
			if ((value != this._defcon)) {
				this.OnPropertyChanging("Defcon", this._defcon);
				this._defcon = value;
				this.OnPropertyChanged("Defcon");
			}
		}
	}
	
	/// <summary>
	/// System experiencing a problem
	/// </summary>
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="System", Storage="_system", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Systems")]
	public Microsoft.SharePoint.Linq.EntitySet<SystemsItem> System {
		get {
			return this._system;
		}
		set {
			this._system.Assign(value);
		}
	}
	
	private void OnSystemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("System", this._system.Clone());
	}
	
	private void OnSystemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("System");
	}
	
	private void OnSystemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SystemsItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.OutagesItem.Add(this);
		}
		else {
			e.Item.OutagesItem.Remove(this);
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Subscriptions")]
public partial class SubscriptionsItem : Item {
	
	private string _subscribedTo;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public SubscriptionsItem() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SubscribedTo", Storage="_subscribedTo", FieldType="Note")]
	public string SubscribedTo {
		get {
			return this._subscribedTo;
		}
		set {
			if ((value != this._subscribedTo)) {
				this.OnPropertyChanging("SubscribedTo", this._subscribedTo);
				this._subscribedTo = value;
				this.OnPropertyChanged("SubscribedTo");
			}
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Systems")]
public partial class SystemsItem : Item {
	
	private string _description;
	
	private System.Nullable<double> _sortOrder;
	
	private string _trackID;
	
	private System.Nullable<Category> _category;
	
	private Microsoft.SharePoint.Linq.EntitySet<OutagesItem> _outagesItem;
	
	private Microsoft.SharePoint.Linq.EntityRef<ClassificationItem> _classification;
	
	private System.Nullable<int> _ownerId;
	
	private string _ownerImnName;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public SystemsItem() {
		this._outagesItem = new Microsoft.SharePoint.Linq.EntitySet<OutagesItem>();
		this._outagesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<OutagesItem>>(this.OnOutagesItemSync);
		this._outagesItem.OnChanged += new System.EventHandler(this.OnOutagesItemChanged);
		this._outagesItem.OnChanging += new System.EventHandler(this.OnOutagesItemChanging);
		this._classification = new Microsoft.SharePoint.Linq.EntityRef<ClassificationItem>();
		this._classification.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ClassificationItem>>(this.OnClassificationSync);
		this._classification.OnChanged += new System.EventHandler(this.OnClassificationChanged);
		this._classification.OnChanging += new System.EventHandler(this.OnClassificationChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
	public string Description {
		get {
			return this._description;
		}
		set {
			if ((value != this._description)) {
				this.OnPropertyChanging("Description", this._description);
				this._description = value;
				this.OnPropertyChanged("Description");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SortOrder", Storage="_sortOrder", FieldType="Number")]
	public System.Nullable<double> SortOrder {
		get {
			return this._sortOrder;
		}
		set {
			if ((value != this._sortOrder)) {
				this.OnPropertyChanging("SortOrder", this._sortOrder);
				this._sortOrder = value;
				this.OnPropertyChanged("SortOrder");
			}
		}
	}
	
	/// <summary>
	/// Unique ID for this item - Used to track subscriptions
	/// </summary>
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TrackID", Storage="_trackID", Required=true, FieldType="Text")]
	public string TrackID {
		get {
			return this._trackID;
		}
		set {
			if ((value != this._trackID)) {
				this.OnPropertyChanging("TrackID", this._trackID);
				this._trackID = value;
				this.OnPropertyChanged("TrackID");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", FieldType="Choice")]
	public System.Nullable<Category> Category {
		get {
			return this._category;
		}
		set {
			if ((value != this._category)) {
				this.OnPropertyChanging("Category", this._category);
				this._category = value;
				this.OnPropertyChanged("Category");
			}
		}
	}
	
	/// <summary>
	/// System experiencing a problem
	/// </summary>
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="System", Storage="_outagesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Outages")]
	public Microsoft.SharePoint.Linq.EntitySet<OutagesItem> OutagesItem {
		get {
			return this._outagesItem;
		}
		set {
			this._outagesItem.Assign(value);
		}
	}
	
	/// <summary>
	/// Class of system
	/// </summary>
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Class", Storage="_classification", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Classification")]
	public ClassificationItem Classification {
		get {
			return this._classification.GetEntity();
		}
		set {
			this._classification.SetEntity(value);
		}
	}
	
	/// <summary>
	/// Dolby staff member identified as the owner of this system
	/// </summary>
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Owner", Storage="_ownerId", FieldType="User", IsLookupId=true)]
	public System.Nullable<int> OwnerId {
		get {
			return this._ownerId;
		}
		set {
			if ((value != this._ownerId)) {
				this.OnPropertyChanging("OwnerId", this._ownerId);
				this._ownerId = value;
				this.OnPropertyChanged("OwnerId");
			}
		}
	}
	
	/// <summary>
	/// Dolby staff member identified as the owner of this system
	/// </summary>
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Owner", Storage="_ownerImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
	public string OwnerImnName {
		get {
			return this._ownerImnName;
		}
		set {
			if ((value != this._ownerImnName)) {
				this.OnPropertyChanging("OwnerImnName", this._ownerImnName);
				this._ownerImnName = value;
				this.OnPropertyChanged("OwnerImnName");
			}
		}
	}
	
	private void OnOutagesItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("OutagesItem", this._outagesItem.Clone());
	}
	
	private void OnOutagesItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("OutagesItem");
	}
	
	private void OnOutagesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<OutagesItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.System.Add(this);
		}
		else {
			e.Item.System.Remove(this);
		}
	}
	
	private void OnClassificationChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("Classification", this._classification.Clone());
	}
	
	private void OnClassificationChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("Classification");
	}
	
	private void OnClassificationSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ClassificationItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.SystemsItem.Add(this);
		}
		else {
			e.Item.SystemsItem.Remove(this);
		}
	}
}

public enum Defcon : int {
	
	None = 0,
	
	Invalid = 1,
	
	[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="1")]
	_1 = 2,
	
	[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2")]
	_2 = 4,
	
	[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3")]
	_3 = 8,
}

public enum Category : int {
	
	None = 0,
	
	Invalid = 1,
	
	[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Infrastructure")]
	Infrastructure = 2,
	
	[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Applications")]
	Applications = 4,
}
